{
    "App": {
        "CorsOrigins": "https://*.Notification.com,http://localhost:4200,http://localhost:44307,https://localhost:44307,http://172.31.3.18:80,http://172.31.3.18,http://172.31.3.19:80,http://172.31.3.19"
    },
    "Autorizacion": {
        //Tiempo cache para guardar los permisos/usuario. (Segundos)
        "CacheTiempo": 360
    },
    //Configuracion de servicios externos "Remotos"
    "RemoteServices": {
        //Api para obtener permisos usuario autentificado
        "Permisos": {
            "BaseUrl": "http://172.31.3.40:83/"
        }
    },
    "Redis": {
        "Configuration": "172.31.3.44:6379"
    },
  "Notificaciones": {
    //True: Se envian la notificacion por emails, false: se registra la notificacion en los logs
    "EnviarEmail": true,
    //Al colocar una lista  destinatarios "Emails- separados con coma", todas las notificaciones seran enviadas a estos correos. 
    //Esto permite ignorar los destinatarios enviados en las notificaciones
    "DestinatariosReemplazar": "willan.mejia@grupobusiness.it,lenin.avila@grupobusiness.it,leiny.ruiz@grupobusiness.it,harold.urbay@grupobusiness.it,marco.ayala@grupobusiness.it,angyespinosa86@gmail.com",
    //El proceso notificaciones se puede realizar asincronamente utilizando eventos.
    "ProcesarAsincronamente": false,
    //Configuraciones adicionales MailKitOptions
    "MailKit": {
      //MailKitOptions.SecureSocketOptions. Valores: None = 0,Auto = 1,SslOnConnect = 2,StartTls = 3,StartTlsWhenAvailable = 4
      //Para Office365 => Utilice Auto
      //Si el servidor SMTP no posee ssl => Utilice None
      "SecureSocketOptions": "None"
    }
  },
  "AuthServer": {
    "Authority": "http://172.31.3.40:85",
    "RequireHttpsMetadata": "false",
    "SwaggerClientId": "Notificacion_Swagger",
    "SwaggerClientSecret": "e4e95c11-90c2-452c-b9da-2941d30a48bb",
    "Audience": "Notificacion",
    "Scopes": [ "Notificacion" ]
  },
    //Configuracion Cache
  "Cache": {
    "KeyPrefix": "Notificaciones:"
  },
    //Configuracion eventos distribuidos. General
    "EventosDistribuidos": {
        //En milesegundos
        "IntervaloTiempo": 3000,
        "NumeroReintentos": 3
    },
    //Configuracion eventos distribuidos, utilizando kafka.
    "Kafka": {
        "Connections": {
            "Default": {
                "BootstrapServers": "172.31.3.44:9092",
                "SocketTimeoutMs": 60000
            }
        },
        "EventBus": {
            "GroupId": "Mre.Sb.Notificaciones",
            "TopicName": "Mre.Sb.Notificaciones"
        }
    },
    //Configuraciones Clave/Valor
    "Settings": {
        
    },
    //Configuracion encriptacion
    "StringEncryption": {
        //Texto para encriptacion/desencriptar
        "DefaultPassPhrase": "UYd/qP6?UM7dch~,'LbA"
    },
    //Configuraciones de logs
    "Serilog": {
      "Using": [
        "Serilog.Sinks.Console",
        "Serilog.Sinks.File",
        "Serilog.Sinks.Async",
        "Serilog.Sinks.Elasticsearch",
        "Serilog.Enrichers.Environment",
        "Mre.Sb.Logs"
      ],
      "MinimumLevel": {
        "Default": "Debug"
        //"Override": {
        //  "Microsoft": "Warning"
        //}
      },
      "Enrich": [
        //https://github.com/serilog/serilog-enrichers-environment
        "WithMachineName",
        "WithEnvironmentName",
        "WithEnvironmentUserName",
        {
          "Name": "ConUsuario",
          "Args": {
            //Nombre claim, que se utiliza para obtener el usuario
            "usuarioClaim": "preferred_username",
            //Nombre campo, que se registra en los logs, el nombre del usuario
            "usuarioPropiedadNombre": "UserName"
          }
        }
      ],
      "WriteTo": [
        
        //{
        //  "Name": "Async",
        //  "Args": {
        //    "configure": [
        //      {
        //        "Name": "Console"
        //      }
        //    ]
        //  }
        //},//
        {
          "Name": "Async",
          "Args": {
            "configure": [
              {
                "Name": "File",
                "Args": {
                  "path": "logs/log-.txt",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 30,
                  "shared": true,
                  "rollOnFileSizeLimit": true
                  //"formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                }
              }
            ]
          }
        },
          {
            "Name": "Elasticsearch",
            //Opciones: https://github.com/serilog-contrib/serilog-sinks-elasticsearch/wiki/Configure-the-sink
            "Args": {
              "nodeUris": "http://172.31.3.43:9200",
              "indexFormat": "logs_notificaciones_{0:yyyy.MM.dd}",
              "autoRegisterTemplate": true,
              //"minimumLogEventLevel": "Information",
              "batchAction": "Create",
              //When true fields will be written at the root of the json document.
              "inlineFields": true
            }
          }
      ],
        "Properties": {
            "ApplicationName": "Notificaciones"
        }
    }
}